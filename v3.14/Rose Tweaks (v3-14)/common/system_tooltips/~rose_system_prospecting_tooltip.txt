#root = system
#from = player
system_prospecting_dyson_swarm_title_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_title

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_energy_1
				has_deposit = d_energy_2
				has_deposit = d_energy_3
				has_deposit = d_energy_4
				has_deposit = d_energy_5
				has_deposit = d_energy_6
				has_deposit = d_energy_7
				has_deposit = d_energy_8
				has_deposit = d_energy_9
				has_deposit = d_energy_10
				has_deposit = d_guardian_dragon_hoard
				has_deposit = d_minerals_1
				has_deposit = d_minerals_2
				has_deposit = d_minerals_3
				has_deposit = d_minerals_4
				has_deposit = d_minerals_5
				has_deposit = d_minerals_6
				has_deposit = d_minerals_7
				has_deposit = d_minerals_8
				has_deposit = d_minerals_9
				has_deposit = d_minerals_10
				has_deposit = d_food_3
				has_deposit = d_food_10
				has_deposit = d_consumer_goods_obsessional_directive
				has_deposit = d_alloys_1
				has_deposit = d_alloys_2
				has_deposit = d_alloys_3
				has_deposit = d_alloys_4
				has_deposit = d_alloys_5
				has_deposit = d_alloys_10
				has_deposit = d_alloys_25
				has_deposit = d_vast_unity_deposit
				has_deposit = d_crystal_rift
				has_deposit = d_physics_1
				has_deposit = d_physics_2
				has_deposit = d_physics_3
				has_deposit = d_physics_4
				has_deposit = d_physics_5
				has_deposit = d_physics_6
				has_deposit = d_physics_7
				has_deposit = d_physics_8
				has_deposit = d_physics_9
				has_deposit = d_physics_10
				has_deposit = d_physics_25
				has_deposit = d_society_1
				has_deposit = d_society_2
				has_deposit = d_society_3
				has_deposit = d_society_4
				has_deposit = d_society_5
				has_deposit = d_society_6
				has_deposit = d_society_7
				has_deposit = d_society_8
				has_deposit = d_society_9
				has_deposit = d_society_10
				has_deposit = d_society_15
				has_deposit = d_society_25
				has_deposit = d_engineering_1
				has_deposit = d_engineering_2
				has_deposit = d_engineering_3
				has_deposit = d_engineering_4
				has_deposit = d_engineering_5
				has_deposit = d_engineering_6
				has_deposit = d_engineering_7
				has_deposit = d_engineering_8
				has_deposit = d_engineering_9
				has_deposit = d_engineering_10
				has_deposit = d_engineering_25
				has_deposit = d_volatile_motes_1
				has_deposit = d_volatile_motes_2
				has_deposit = d_volatile_motes_3
				has_deposit = d_volatile_motes_4
				has_deposit = d_volatile_motes_5
				has_deposit = d_exotic_gases_1
				has_deposit = d_exotic_gases_2
				has_deposit = d_exotic_gases_3
				has_deposit = d_exotic_gases_4
				has_deposit = d_exotic_gases_5
				has_deposit = d_rare_crystals_1
				has_deposit = d_rare_crystals_2
				has_deposit = d_rare_crystals_3
				has_deposit = d_rare_crystals_4
				has_deposit = d_rare_crystals_5
				has_deposit = d_living_metal_deposit
				has_deposit = d_zro_deposit_1
				has_deposit = d_zro_deposit_2
				has_deposit = d_zro_deposit_3
				has_deposit = d_zro_deposit_4
				has_deposit = d_zro_deposit_5
				has_deposit = d_dark_matter_deposit_1
				has_deposit = d_dark_matter_deposit_2
				has_deposit = d_dark_matter_deposit_3
				has_deposit = d_dark_matter_deposit_10
				has_deposit = d_astral_threads_deposit_1
				has_deposit = d_astral_threads_deposit_2
				has_deposit = d_astral_threads_deposit_3
				has_deposit = d_artifacts_research_1
				has_deposit = d_artifacts_mining_1
				has_deposit = d_artifacts_planet_1
				has_deposit = d_artifacts_research_2
				has_deposit = d_artifacts_mining_2
				has_deposit = d_artifacts_planet_2
				has_deposit = d_artifacts_research_3
				has_deposit = d_artifacts_mining_3
				has_deposit = d_artifacts_planet_3
				has_deposit = d_trade_value_1
				has_deposit = d_trade_value_2
				has_deposit = d_trade_value_3
				has_deposit = d_trade_value_4
				has_deposit = d_trade_value_5
				has_deposit = d_trade_value_6
				has_deposit = d_trade_value_7
				has_deposit = d_trade_value_8
				has_deposit = d_trade_value_9
				has_deposit = d_trade_value_10
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_energy_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_energy

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_energy_1
				has_deposit = d_energy_2
				has_deposit = d_energy_3
				has_deposit = d_energy_4
				has_deposit = d_energy_5
				has_deposit = d_energy_6
				has_deposit = d_energy_7
				has_deposit = d_energy_8
				has_deposit = d_energy_9
				has_deposit = d_energy_10
				has_deposit = d_guardian_dragon_hoard
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_minerals_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_minerals

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_minerals_1
				has_deposit = d_minerals_2
				has_deposit = d_minerals_3
				has_deposit = d_minerals_4
				has_deposit = d_minerals_5
				has_deposit = d_minerals_6
				has_deposit = d_minerals_7
				has_deposit = d_minerals_8
				has_deposit = d_minerals_9
				has_deposit = d_minerals_10
				has_deposit = d_guardian_dragon_hoard
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_food_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_food

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_food_3
				has_deposit = d_food_10
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_consumergoods_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_consumergoods

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_consumer_goods_obsessional_directive
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_alloys_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_alloys

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_alloys_1
				has_deposit = d_alloys_2
				has_deposit = d_alloys_3
				has_deposit = d_alloys_4
				has_deposit = d_alloys_5
				has_deposit = d_alloys_10
				has_deposit = d_alloys_25
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_unity_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_unity

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_vast_unity_deposit
				has_deposit = d_crystal_rift
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_physics_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_physics

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_physics_1
				has_deposit = d_physics_2
				has_deposit = d_physics_3
				has_deposit = d_physics_4
				has_deposit = d_physics_5
				has_deposit = d_physics_6
				has_deposit = d_physics_7
				has_deposit = d_physics_8
				has_deposit = d_physics_9
				has_deposit = d_physics_10
				has_deposit = d_crystal_rift
				has_deposit = d_physics_25
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_society_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_society

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_society_1
				has_deposit = d_society_2
				has_deposit = d_society_3
				has_deposit = d_society_4
				has_deposit = d_society_5
				has_deposit = d_society_6
				has_deposit = d_society_7
				has_deposit = d_society_8
				has_deposit = d_society_9
				has_deposit = d_society_10
				has_deposit = d_society_15
				has_deposit = d_society_25
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_engineering_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_engineering

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_engineering_1
				has_deposit = d_engineering_2
				has_deposit = d_engineering_3
				has_deposit = d_engineering_4
				has_deposit = d_engineering_5
				has_deposit = d_engineering_6
				has_deposit = d_engineering_7
				has_deposit = d_engineering_8
				has_deposit = d_engineering_9
				has_deposit = d_engineering_10
				has_deposit = d_engineering_25
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_motes_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_motes

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_volatile_motes_1
				has_deposit = d_volatile_motes_2
				has_deposit = d_volatile_motes_3
				has_deposit = d_volatile_motes_4
				has_deposit = d_volatile_motes_5
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_gases_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_gases

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_exotic_gases_1
				has_deposit = d_exotic_gases_2
				has_deposit = d_exotic_gases_3
				has_deposit = d_exotic_gases_4
				has_deposit = d_exotic_gases_5
				
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_crystals_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_crystals

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_rare_crystals_1
				has_deposit = d_rare_crystals_2
				has_deposit = d_rare_crystals_3
				has_deposit = d_rare_crystals_4
				has_deposit = d_rare_crystals_5
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_livingmetal_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_livingmetal

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_living_metal_deposit
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_zro_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_zro

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_zro_deposit_1
				has_deposit = d_zro_deposit_2
				has_deposit = d_zro_deposit_3
				has_deposit = d_zro_deposit_4
				has_deposit = d_zro_deposit_5
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_darkmatter_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_darkmatter

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_dark_matter_deposit_1
				has_deposit = d_dark_matter_deposit_2
				has_deposit = d_dark_matter_deposit_3
				has_deposit = d_dark_matter_deposit_10
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_threads_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_threads

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_astral_threads_deposit_1
				has_deposit = d_astral_threads_deposit_2
				has_deposit = d_astral_threads_deposit_3
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_artifacts_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_artifacts

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_artifacts_research_1
				has_deposit = d_artifacts_mining_1
				has_deposit = d_artifacts_planet_1
				has_deposit = d_artifacts_research_2
				has_deposit = d_artifacts_mining_2
				has_deposit = d_artifacts_planet_2
				has_deposit = d_artifacts_research_3
				has_deposit = d_artifacts_mining_3
				has_deposit = d_artifacts_planet_3
			}
		}
	}
}

#root = system
#from = player
system_prospecting_dyson_swarm_trade_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_dyson_swarm_trade

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the player has the tech and is under the limit
		from = {
			has_technology = tech_dyson_swarm
			
			check_variable = {
				which = dyson_swarm_counter
				value < value:dyson_swarm_limit
			}
		}

		# Check if system is valid for creating a dyson swarm
		NOR = {
			is_star_class = sc_binary_1
			is_star_class = sc_binary_2
			is_star_class = sc_binary_3
			is_star_class = sc_binary_4
			is_star_class = sc_binary_5
			is_star_class = sc_binary_6
			is_star_class = sc_binary_7
			is_star_class = sc_binary_8
			is_star_class = sc_binary_9
			is_star_class = sc_binary_10
			is_star_class = sc_trinary_1
			is_star_class = sc_trinary_2
			is_star_class = sc_trinary_3
			is_star_class = sc_trinary_4
			is_star_class = sc_black_hole
			is_star_class = sc_neutron_star
			is_star_class = sc_pulsar
		}
		
		# Checks the sun is valid for a dyson swarm and has at least one valid deposit
		any_system_planet = {
			is_star = yes
			
			NOR = { 
				has_planet_flag = megastructure
				has_planet_flag = has_megastructure
				has_anomaly = yes
			}
			
			OR = {
				has_deposit = d_trade_value_1
				has_deposit = d_trade_value_2
				has_deposit = d_trade_value_3
				has_deposit = d_trade_value_4
				has_deposit = d_trade_value_5
				has_deposit = d_trade_value_6
				has_deposit = d_trade_value_7
				has_deposit = d_trade_value_8
				has_deposit = d_trade_value_9
				has_deposit = d_trade_value_10
			}
		}
	}
}

#root = system
#from = player
system_prospecting_nanite_harvester_tooltip = {
	custom_tooltip = {
		success_text = system_prospecting_nanite_harvester

		exists = from
		
		# Checks the system is surveyed by the player
		is_surveyed = { 
			who = from
			status = yes 
		}
		
		# Checks the country has the nanotech ascension path
		from = {
			# Only shows tooltip for Machine Empires
			OR = {
				has_authority = auth_machine_intelligence
				is_individual_machine = yes
			}
			
			# Prevents tooltip for showing for Virtual or Modularity empires
			NOT = {
				has_tradition = tr_virtuality_adopt
				has_tradition = tr_modularity_adopt
			}
		}

		# Checks system has at least one valid planet for a deposit
		any_system_planet = {
			can_have_mineral_deposits = yes
			NOT = {
				has_deposit_for = shipclass_research_station
			}
		}
	}
}